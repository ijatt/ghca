// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  APPLICANT
  ADMIN
}

enum Status {
  PENDING
  REJECTED
  APPROVED
}

model users {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      Role       @default(APPLICANT)
  admin     admin?
  applicant applicant?
}

model admin {
  id           Int            @id @default(autoincrement())
  name         String
  department   String
  userId       Int            @unique
  user         users          @relation(fields: [userId], references: [id])
  applications applications[]
}

model applicant {
  id             Int            @id @default(autoincrement())
  name           String
  icNumber       String?
  contactNumber  String?
  address        String?
  city           String?
  postcode       String?
  universityName String?
  occupation     String?
  userId         Int            @unique
  user           users          @relation(fields: [userId], references: [id])
  applications   applications[]
}

model applications {
  id           Int       @id @default(autoincrement())
  name         String
  finding      String
  userId       Int
  user         applicant @relation(fields: [userId], references: [id])
  status       Status    @default(PENDING)
  approvedBy   Int?
  admin        admin?    @relation(fields: [approvedBy], references: [id])
  approvedDate DateTime?
  fileName     String?
}
